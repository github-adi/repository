-My build of DIGITAL Command Language:
-Muhammad Adi Nugroho,S.Adm.Neg.:
-Via My Notepad++ (HTML Editor):
C:\Users\Axioo\node_modules\config:
// Create a deferredConfig prototype so that we can check for it when reviewing the configs later.
function DeferredConfig () {
}
DeferredConfig.prototype.resolve = function (config) {};

// Accept a function that we'll use to resolve this value later and return a 'deferred' configuration value to resolve it later.
function deferConfig (func) {
  var obj = Object.create(DeferredConfig.prototype);
  obj.resolve = func;
  return obj;
}

module.exports.deferConfig = deferConfig;
module.exports.DeferredConfig = DeferredConfig;
-Via https://tonicdev.com/npm/module-js:
-Returned:
function DeferredConfig()
name: "DeferredConfig"
prototype: DeferredConfig
resolve: function()
Object Prototype
__defineGetter__: function()
__defineSetter__: function()
__lookupGetter__: function()
__lookupSetter__: function()
__proto__ (getter): function()
__proto__ (setter): function()
constructor: function()
hasOwnProperty: function()
isPrototypeOf: function()
propertyIsEnumerable: function()
toLocaleString: function()
toString: function()
valueOf: function()
...
Function Prototype
apply: function()
bind: function()
call: function()
constructor: function()
name: ""
toString: function()
Object Prototype
-Via file:///C:/Users/Axioo/Favorites/jsLint.html:
1.0This function needs a 'use strict' pragma.
function DeferredConfig () {
1.24Unexpected space between 'DeferredConfig' and '('.
function DeferredConfig () {
1.27Empty block.
function DeferredConfig () {
3.35This function needs a 'use strict' pragma.
DeferredConfig.prototype.resolve = function (config) {};
3.45Unused 'config'.
DeferredConfig.prototype.resolve = function (config) {};
3.53Empty block.
DeferredConfig.prototype.resolve = function (config) {};
6.0This function needs a 'use strict' pragma.
function deferConfig (func) {
6.21Unexpected space between 'deferConfig' and '('.
function deferConfig (func) {
7.2Expected 'var' at column 4, not column 2.
  var obj = Object.create(DeferredConfig.prototype);
8.2Expected 'obj' at column 4, not column 2.
  obj.resolve = func;
9.2Expected 'return' at column 4, not column 2.
  return obj;
12.0Undeclared 'module'.
module.exports.deferConfig = deferConfig;
13.0Undeclared 'module'.
module.exports.DeferredConfig = DeferredConfig;
Function Report
global
DeferredConfig, Object, deferConfig
1
DeferredConfig()
3
«resolve»(config)
parameter
config
6
deferConfig(func)
parameter
func
variable
obj
global
DeferredConfig, Object
JSLint edition 2016-08-31
Property Directive

/*property
    DeferredConfig, create, deferConfig, exports, prototype, resolve
*/

select propertyJSLintclearclear options
-Via Node.js:
> // Create a deferredConfig prototype so that we can check for it when reviewin
g the configs later.
undefined
> function DeferredConfig () {
... }
undefined
> DeferredConfig.prototype.resolve = function (config) {};
[Function]
>
> // Accept a function that we'll use to resolve this value later and return a '
deferred' configuration value to resolve it later.
undefined
> function deferConfig (func) {
...   var obj = Object.create(DeferredConfig.prototype);
...   obj.resolve = func;
...   return obj;
... }
undefined
>
> module.exports.deferConfig = deferConfig;
[Function: deferConfig]
> module.exports.DeferredConfig = DeferredConfig;
[Function: DeferredConfig]
>
-Via Google Chrome Console:
-Returned:
debugger:///VM77:
Infinity
:
Infinity
AnalyserNode
:
AnalyserNode()
AnimationEvent
:
AnimationEvent()
AppBannerPromptResult
:
AppBannerPromptResult()
ApplicationCache
:
ApplicationCache()
ApplicationCacheErrorEvent
:
ApplicationCacheErrorEvent()
Array
:
Array()
ArrayBuffer
:
ArrayBuffer()
Attr
:
Attr()
Audio
:
HTMLAudioElement()
AudioBuffer
:
AudioBuffer()
AudioBufferSourceNode
:
AudioBufferSourceNode()
AudioContext
:
AudioContext()
AudioDestinationNode
:
AudioDestinationNode()
AudioListener
:
AudioListener()
AudioNode
:
AudioNode()
AudioParam
:
AudioParam()
AudioProcessingEvent
:
AudioProcessingEvent()
BarProp
:
BarProp()
BatteryManager
:
BatteryManager()
BeforeInstallPromptEvent
:
BeforeInstallPromptEvent()
BeforeUnloadEvent
:
BeforeUnloadEvent()
BiquadFilterNode
:
BiquadFilterNode()
Blob
:
Blob()
BlobEvent
:
BlobEvent()
Boolean
:
Boolean()
ByteLengthQueuingStrategy
:
ByteLengthQueuingStrategy()
CDATASection
:
CDATASection()
CSS
:
CSS()
CSSFontFaceRule
:
CSSFontFaceRule()
CSSGroupingRule
:
CSSGroupingRule()
CSSImportRule
:
CSSImportRule()
CSSKeyframeRule
:
CSSKeyframeRule()
CSSKeyframesRule
:
CSSKeyframesRule()
CSSMediaRule
:
CSSMediaRule()
CSSNamespaceRule
:
CSSNamespaceRule()
CSSPageRule
:
CSSPageRule()
CSSRule
:
CSSRule()
CSSRuleList
:
CSSRuleList()
CSSStyleDeclaration
:
CSSStyleDeclaration()
CSSStyleRule
:
CSSStyleRule()
CSSStyleSheet
:
CSSStyleSheet()
CSSSupportsRule
:
CSSSupportsRule()
CSSViewportRule
:
CSSViewportRule()
Cache
:
Cache()
CacheStorage
:
CacheStorage()
CanvasCaptureMediaStreamTrack
:
CanvasCaptureMediaStreamTrack()
CanvasGradient
:
CanvasGradient()
CanvasPattern
:
CanvasPattern()
CanvasRenderingContext2D
:
CanvasRenderingContext2D()
ChannelMergerNode
:
ChannelMergerNode()
ChannelSplitterNode
:
ChannelSplitterNode()
CharacterData
:
CharacterData()
ClientRect
:
ClientRect()
ClientRectList
:
ClientRectList()
ClipboardEvent
:
ClipboardEvent()
CloseEvent
:
CloseEvent()
Comment
:
Comment()
CompositionEvent
:
CompositionEvent()
ConvolverNode
:
ConvolverNode()
CountQueuingStrategy
:
CountQueuingStrategy()
Credential
:
Credential()
CredentialsContainer
:
CredentialsContainer()
Crypto
:
Crypto()
CryptoKey
:
CryptoKey()
CustomEvent
:
CustomEvent()
DOMError
:
DOMError()
DOMException
:
DOMException()
DOMImplementation
:
DOMImplementation()
DOMParser
:
DOMParser()
DOMStringList
:
DOMStringList()
DOMStringMap
:
DOMStringMap()
DOMTokenList
:
DOMTokenList()
DataTransfer
:
DataTransfer()
DataTransferItem
:
DataTransferItem()
DataTransferItemList
:
DataTransferItemList()
DataView
:
DataView()
Date
:
Date()
DeferredConfig
:
DeferredConfig()
DelayNode
:
DelayNode()
DeviceMotionEvent
:
DeviceMotionEvent()
DeviceOrientationEvent
:
DeviceOrientationEvent()
Document
:
Document()
DocumentFragment
:
DocumentFragment()
DocumentType
:
DocumentType()
DragEvent
:
DragEvent()
DynamicsCompressorNode
:
DynamicsCompressorNode()
Element
:
Element()
Error
:
Error()
ErrorEvent
:
ErrorEvent()
EvalError
:
EvalError()
Event
:
Event()
EventSource
:
EventSource()
EventTarget
:
EventTarget()
FederatedCredential
:
FederatedCredential()
File
:
File()
FileError
:
FileError()
FileList
:
FileList()
FileReader
:
FileReader()
Float32Array
:
Float32Array()
Float64Array
:
Float64Array()
FocusEvent
:
FocusEvent()
FontFace
:
FontFace()
FormData
:
FormData()
Function
:
Function()
GainNode
:
GainNode()
Gamepad
:
Gamepad()
GamepadButton
:
GamepadButton()
GamepadEvent
:
GamepadEvent()
HTMLAllCollection
:
HTMLAllCollection()
HTMLAnchorElement
:
HTMLAnchorElement()
HTMLAreaElement
:
HTMLAreaElement()
HTMLAudioElement
:
HTMLAudioElement()
HTMLBRElement
:
HTMLBRElement()
HTMLBaseElement
:
HTMLBaseElement()
HTMLBodyElement
:
HTMLBodyElement()
HTMLButtonElement
:
HTMLButtonElement()
HTMLCanvasElement
:
HTMLCanvasElement()
HTMLCollection
:
HTMLCollection()
HTMLContentElement
:
HTMLContentElement()
HTMLDListElement
:
HTMLDListElement()
HTMLDataListElement
:
HTMLDataListElement()
HTMLDetailsElement
:
HTMLDetailsElement()
HTMLDialogElement
:
HTMLDialogElement()
HTMLDirectoryElement
:
HTMLDirectoryElement()
HTMLDivElement
:
HTMLDivElement()
HTMLDocument
:
HTMLDocument()
HTMLElement
:
HTMLElement()
HTMLEmbedElement
:
HTMLEmbedElement()
HTMLFieldSetElement
:
HTMLFieldSetElement()
HTMLFontElement
:
HTMLFontElement()
HTMLFormControlsCollection
:
HTMLFormControlsCollection()
HTMLFormElement
:
HTMLFormElement()
HTMLFrameElement
:
HTMLFrameElement()
HTMLFrameSetElement
:
HTMLFrameSetElement()
HTMLHRElement
:
HTMLHRElement()
HTMLHeadElement
:
HTMLHeadElement()
HTMLHeadingElement
:
HTMLHeadingElement()
HTMLHtmlElement
:
HTMLHtmlElement()
HTMLIFrameElement
:
HTMLIFrameElement()
HTMLImageElement
:
HTMLImageElement()
HTMLInputElement
:
HTMLInputElement()
HTMLKeygenElement
:
HTMLKeygenElement()
HTMLLIElement
:
HTMLLIElement()
HTMLLabelElement
:
HTMLLabelElement()
HTMLLegendElement
:
HTMLLegendElement()
HTMLLinkElement
:
HTMLLinkElement()
HTMLMapElement
:
HTMLMapElement()
HTMLMarqueeElement
:
HTMLMarqueeElement()
HTMLMediaElement
:
HTMLMediaElement()
HTMLMenuElement
:
HTMLMenuElement()
HTMLMetaElement
:
HTMLMetaElement()
HTMLMeterElement
:
HTMLMeterElement()
HTMLModElement
:
HTMLModElement()
HTMLOListElement
:
HTMLOListElement()
HTMLObjectElement
:
HTMLObjectElement()
HTMLOptGroupElement
:
HTMLOptGroupElement()
HTMLOptionElement
:
HTMLOptionElement()
HTMLOptionsCollection
:
HTMLOptionsCollection()
HTMLOutputElement
:
HTMLOutputElement()
HTMLParagraphElement
:
HTMLParagraphElement()
HTMLParamElement
:
HTMLParamElement()
HTMLPictureElement
:
HTMLPictureElement()
HTMLPreElement
:
HTMLPreElement()
HTMLProgressElement
:
HTMLProgressElement()
HTMLQuoteElement
:
HTMLQuoteElement()
HTMLScriptElement
:
HTMLScriptElement()
HTMLSelectElement
:
HTMLSelectElement()
HTMLShadowElement
:
HTMLShadowElement()
HTMLSourceElement
:
HTMLSourceElement()
HTMLSpanElement
:
HTMLSpanElement()
HTMLStyleElement
:
HTMLStyleElement()
HTMLTableCaptionElement
:
HTMLTableCaptionElement()
HTMLTableCellElement
:
HTMLTableCellElement()
HTMLTableColElement
:
HTMLTableColElement()
HTMLTableElement
:
HTMLTableElement()
HTMLTableRowElement
:
HTMLTableRowElement()
HTMLTableSectionElement
:
HTMLTableSectionElement()
HTMLTemplateElement
:
HTMLTemplateElement()
HTMLTextAreaElement
:
HTMLTextAreaElement()
HTMLTitleElement
:
HTMLTitleElement()
HTMLTrackElement
:
HTMLTrackElement()
HTMLUListElement
:
HTMLUListElement()
HTMLUnknownElement
:
HTMLUnknownElement()
HTMLVideoElement
:
HTMLVideoElement()
HashChangeEvent
:
HashChangeEvent()
Headers
:
Headers()
History
:
History()
IDBCursor
:
IDBCursor()
IDBCursorWithValue
:
IDBCursorWithValue()
IDBDatabase
:
IDBDatabase()
IDBFactory
:
IDBFactory()
IDBIndex
:
IDBIndex()
IDBKeyRange
:
IDBKeyRange()
IDBObjectStore
:
IDBObjectStore()
IDBOpenDBRequest
:
IDBOpenDBRequest()
IDBRequest
:
IDBRequest()
IDBTransaction
:
IDBTransaction()
IDBVersionChangeEvent
:
IDBVersionChangeEvent()
IIRFilterNode
:
IIRFilterNode()
IdleDeadline
:
IdleDeadline()
Image
:
HTMLImageElement()
ImageBitmap
:
ImageBitmap()
ImageData
:
ImageData()
InputDeviceCapabilities
:
InputDeviceCapabilities()
Int8Array
:
Int8Array()
Int16Array
:
Int16Array()
Int32Array
:
Int32Array()
IntersectionObserver
:
IntersectionObserver()
IntersectionObserverEntry
:
IntersectionObserverEntry()
Intl
:
Object
JSON
:
JSON
KeyboardEvent
:
KeyboardEvent()
Location
:
Location()
MIDIAccess
:
MIDIAccess()
MIDIConnectionEvent
:
MIDIConnectionEvent()
MIDIInput
:
MIDIInput()
MIDIInputMap
:
MIDIInputMap()
MIDIMessageEvent
:
MIDIMessageEvent()
MIDIOutput
:
MIDIOutput()
MIDIOutputMap
:
MIDIOutputMap()
MIDIPort
:
MIDIPort()
Map
:
Map()
Math
:
Math
MediaDevices
:
MediaDevices()
MediaElementAudioSourceNode
:
MediaElementAudioSourceNode()
MediaEncryptedEvent
:
MediaEncryptedEvent()
MediaError
:
MediaError()
MediaKeyMessageEvent
:
MediaKeyMessageEvent()
MediaKeySession
:
MediaKeySession()
MediaKeyStatusMap
:
MediaKeyStatusMap()
MediaKeySystemAccess
:
MediaKeySystemAccess()
MediaKeys
:
MediaKeys()
MediaList
:
MediaList()
MediaQueryList
:
MediaQueryList()
MediaQueryListEvent
:
MediaQueryListEvent()
MediaRecorder
:
MediaRecorder()
MediaSource
:
MediaSource()
MediaStreamAudioDestinationNode
:
MediaStreamAudioDestinationNode()
MediaStreamAudioSourceNode
:
MediaStreamAudioSourceNode()
MediaStreamEvent
:
MediaStreamEvent()
MediaStreamTrack
:
MediaStreamTrack()
MessageChannel
:
MessageChannel()
MessageEvent
:
MessageEvent()
MessagePort
:
MessagePort()
MimeType
:
MimeType()
MimeTypeArray
:
MimeTypeArray()
MouseEvent
:
MouseEvent()
MutationEvent
:
MutationEvent()
MutationObserver
:
MutationObserver()
MutationRecord
:
MutationRecord()
NaN
:
NaN
NamedNodeMap
:
NamedNodeMap()
Navigator
:
Navigator()
Node
:
Node()
NodeFilter
:
NodeFilter()
NodeIterator
:
NodeIterator()
NodeList
:
NodeList()
Notification
:
Notification()
Number
:
Number()
Object
:
Object()
OfflineAudioCompletionEvent
:
OfflineAudioCompletionEvent()
OfflineAudioContext
:
OfflineAudioContext()
Option
:
HTMLOptionElement()
OscillatorNode
:
OscillatorNode()
PERSISTENT
:
1
PageTransitionEvent
:
PageTransitionEvent()
PasswordCredential
:
PasswordCredential()
Path2D
:
Path2D()
Performance
:
Performance()
PerformanceEntry
:
PerformanceEntry()
PerformanceMark
:
PerformanceMark()
PerformanceMeasure
:
PerformanceMeasure()
PerformanceNavigation
:
PerformanceNavigation()
PerformanceObserver
:
PerformanceObserver()
PerformanceObserverEntryList
:
PerformanceObserverEntryList()
PerformanceResourceTiming
:
PerformanceResourceTiming()
PerformanceTiming
:
PerformanceTiming()
PeriodicWave
:
PeriodicWave()
PermissionStatus
:
PermissionStatus()
Permissions
:
Permissions()
Plugin
:
Plugin()
PluginArray
:
PluginArray()
PopStateEvent
:
PopStateEvent()
Presentation
:
Presentation()
PresentationAvailability
:
PresentationAvailability()
PresentationConnection
:
PresentationConnection()
PresentationConnectionAvailableEvent
:
PresentationConnectionAvailableEvent()
PresentationConnectionCloseEvent
:
PresentationConnectionCloseEvent()
PresentationRequest
:
PresentationRequest()
ProcessingInstruction
:
ProcessingInstruction()
ProgressEvent
:
ProgressEvent()
Promise
:
Promise()
PromiseRejectionEvent
:
PromiseRejectionEvent()
Proxy
:
Proxy()
PushManager
:
PushManager()
PushSubscription
:
PushSubscription()
RTCCertificate
:
RTCCertificate()
RTCIceCandidate
:
RTCIceCandidate()
RTCSessionDescription
:
RTCSessionDescription()
RadioNodeList
:
RadioNodeList()
Range
:
Range()
RangeError
:
RangeError()
ReadableStream
:
ReadableStream()
ReferenceError
:
ReferenceError()
Reflect
:
Object
RegExp
:
RegExp()
Request
:
Request()
Response
:
Response()
SVGAElement
:
SVGAElement()
SVGAngle
:
SVGAngle()
SVGAnimateElement
:
SVGAnimateElement()
SVGAnimateMotionElement
:
SVGAnimateMotionElement()
SVGAnimateTransformElement
:
SVGAnimateTransformElement()
SVGAnimatedAngle
:
SVGAnimatedAngle()
SVGAnimatedBoolean
:
SVGAnimatedBoolean()
SVGAnimatedEnumeration
:
SVGAnimatedEnumeration()
SVGAnimatedInteger
:
SVGAnimatedInteger()
SVGAnimatedLength
:
SVGAnimatedLength()
SVGAnimatedLengthList
:
SVGAnimatedLengthList()
SVGAnimatedNumber
:
SVGAnimatedNumber()
SVGAnimatedNumberList
:
SVGAnimatedNumberList()
SVGAnimatedPreserveAspectRatio
:
SVGAnimatedPreserveAspectRatio()
SVGAnimatedRect
:
SVGAnimatedRect()
SVGAnimatedString
:
SVGAnimatedString()
SVGAnimatedTransformList
:
SVGAnimatedTransformList()
SVGAnimationElement
:
SVGAnimationElement()
SVGCircleElement
:
SVGCircleElement()
SVGClipPathElement
:
SVGClipPathElement()
SVGComponentTransferFunctionElement
:
SVGComponentTransferFunctionElement()
SVGCursorElement
:
SVGCursorElement()
SVGDefsElement
:
SVGDefsElement()
SVGDescElement
:
SVGDescElement()
SVGDiscardElement
:
SVGDiscardElement()
SVGElement
:
SVGElement()
SVGEllipseElement
:
SVGEllipseElement()
SVGFEBlendElement
:
SVGFEBlendElement()
SVGFEColorMatrixElement
:
SVGFEColorMatrixElement()
SVGFEComponentTransferElement
:
SVGFEComponentTransferElement()
SVGFECompositeElement
:
SVGFECompositeElement()
SVGFEConvolveMatrixElement
:
SVGFEConvolveMatrixElement()
SVGFEDiffuseLightingElement
:
SVGFEDiffuseLightingElement()
SVGFEDisplacementMapElement
:
SVGFEDisplacementMapElement()
SVGFEDistantLightElement
:
SVGFEDistantLightElement()
SVGFEDropShadowElement
:
SVGFEDropShadowElement()
SVGFEFloodElement
:
SVGFEFloodElement()
SVGFEFuncAElement
:
SVGFEFuncAElement()
SVGFEFuncBElement
:
SVGFEFuncBElement()
SVGFEFuncGElement
:
SVGFEFuncGElement()
SVGFEFuncRElement
:
SVGFEFuncRElement()
SVGFEGaussianBlurElement
:
SVGFEGaussianBlurElement()
SVGFEImageElement
:
SVGFEImageElement()
SVGFEMergeElement
:
SVGFEMergeElement()
SVGFEMergeNodeElement
:
SVGFEMergeNodeElement()
SVGFEMorphologyElement
:
SVGFEMorphologyElement()
SVGFEOffsetElement
:
SVGFEOffsetElement()
SVGFEPointLightElement
:
SVGFEPointLightElement()
SVGFESpecularLightingElement
:
SVGFESpecularLightingElement()
SVGFESpotLightElement
:
SVGFESpotLightElement()
SVGFETileElement
:
SVGFETileElement()
SVGFETurbulenceElement
:
SVGFETurbulenceElement()
SVGFilterElement
:
SVGFilterElement()
SVGForeignObjectElement
:
SVGForeignObjectElement()
SVGGElement
:
SVGGElement()
SVGGeometryElement
:
SVGGeometryElement()
SVGGradientElement
:
SVGGradientElement()
SVGGraphicsElement
:
SVGGraphicsElement()
SVGImageElement
:
SVGImageElement()
SVGLength
:
SVGLength()
SVGLengthList
:
SVGLengthList()
SVGLineElement
:
SVGLineElement()
SVGLinearGradientElement
:
SVGLinearGradientElement()
SVGMPathElement
:
SVGMPathElement()
SVGMarkerElement
:
SVGMarkerElement()
SVGMaskElement
:
SVGMaskElement()
SVGMatrix
:
SVGMatrix()
SVGMetadataElement
:
SVGMetadataElement()
SVGNumber
:
SVGNumber()
SVGNumberList
:
SVGNumberList()
SVGPathElement
:
SVGPathElement()
SVGPatternElement
:
SVGPatternElement()
SVGPoint
:
SVGPoint()
SVGPointList
:
SVGPointList()
SVGPolygonElement
:
SVGPolygonElement()
SVGPolylineElement
:
SVGPolylineElement()
SVGPreserveAspectRatio
:
SVGPreserveAspectRatio()
SVGRadialGradientElement
:
SVGRadialGradientElement()
SVGRect
:
SVGRect()
SVGRectElement
:
SVGRectElement()
SVGSVGElement
:
SVGSVGElement()
SVGScriptElement
:
SVGScriptElement()
SVGSetElement
:
SVGSetElement()
SVGStopElement
:
SVGStopElement()
SVGStringList
:
SVGStringList()
SVGStyleElement
:
SVGStyleElement()
SVGSwitchElement
:
SVGSwitchElement()
SVGSymbolElement
:
SVGSymbolElement()
SVGTSpanElement
:
SVGTSpanElement()
SVGTextContentElement
:
SVGTextContentElement()
SVGTextElement
:
SVGTextElement()
SVGTextPathElement
:
SVGTextPathElement()
SVGTextPositioningElement
:
SVGTextPositioningElement()
SVGTitleElement
:
SVGTitleElement()
SVGTransform
:
SVGTransform()
SVGTransformList
:
SVGTransformList()
SVGUnitTypes
:
SVGUnitTypes()
SVGUseElement
:
SVGUseElement()
SVGViewElement
:
SVGViewElement()
SVGViewSpec
:
SVGViewSpec()
SVGZoomEvent
:
SVGZoomEvent()
Screen
:
Screen()
ScreenOrientation
:
ScreenOrientation()
ScriptProcessorNode
:
ScriptProcessorNode()
SecurityPolicyViolationEvent
:
SecurityPolicyViolationEvent()
Selection
:
Selection()
ServiceWorker
:
ServiceWorker()
ServiceWorkerContainer
:
ServiceWorkerContainer()
ServiceWorkerMessageEvent
:
ServiceWorkerMessageEvent()
ServiceWorkerRegistration
:
ServiceWorkerRegistration()
Set
:
Set()
ShadowRoot
:
ShadowRoot()
SharedWorker
:
SharedWorker()
SiteBoundCredential
:
SiteBoundCredential()
SourceBuffer
:
SourceBuffer()
SourceBufferList
:
SourceBufferList()
SpeechSynthesisEvent
:
SpeechSynthesisEvent()
SpeechSynthesisUtterance
:
SpeechSynthesisUtterance()
Storage
:
Storage()
StorageEvent
:
StorageEvent()
String
:
String()
StyleSheet
:
StyleSheet()
StyleSheetList
:
StyleSheetList()
SubtleCrypto
:
SubtleCrypto()
Symbol
:
Symbol()
SyncManager
:
SyncManager()
SyntaxError
:
SyntaxError()
TEMPORARY
:
0
Text
:
Text()
TextDecoder
:
TextDecoder()
TextEncoder
:
TextEncoder()
TextEvent
:
TextEvent()
TextMetrics
:
TextMetrics()
TextTrack
:
TextTrack()
TextTrackCue
:
TextTrackCue()
TextTrackCueList
:
TextTrackCueList()
TextTrackList
:
TextTrackList()
TimeRanges
:
TimeRanges()
Touch
:
Touch()
TouchEvent
:
TouchEvent()
TouchList
:
TouchList()
TrackEvent
:
TrackEvent()
TransitionEvent
:
TransitionEvent()
TreeWalker
:
TreeWalker()
TypeError
:
TypeError()
UIEvent
:
UIEvent()
URIError
:
URIError()
URL
:
URL()
URLSearchParams
:
URLSearchParams()
Uint8Array
:
Uint8Array()
Uint8ClampedArray
:
Uint8ClampedArray()
Uint16Array
:
Uint16Array()
Uint32Array
:
Uint32Array()
VTTCue
:
VTTCue()
ValidityState
:
ValidityState()
WaveShaperNode
:
WaveShaperNode()
WeakMap
:
WeakMap()
WeakSet
:
WeakSet()
WebGLActiveInfo
:
WebGLActiveInfo()
WebGLBuffer
:
WebGLBuffer()
WebGLContextEvent
:
WebGLContextEvent()
WebGLFramebuffer
:
WebGLFramebuffer()
WebGLProgram
:
WebGLProgram()
WebGLRenderbuffer
:
WebGLRenderbuffer()
WebGLRenderingContext
:
WebGLRenderingContext()
WebGLShader
:
WebGLShader()
WebGLShaderPrecisionFormat
:
WebGLShaderPrecisionFormat()
WebGLTexture
:
WebGLTexture()
WebGLUniformLocation
:
WebGLUniformLocation()
WebKitAnimationEvent
:
AnimationEvent()
WebKitCSSMatrix
:
WebKitCSSMatrix()
WebKitMutationObserver
:
MutationObserver()
WebKitTransitionEvent
:
TransitionEvent()
WebSocket
:
WebSocket()
WheelEvent
:
WheelEvent()
Window
:
Window()
Worker
:
Worker()
XMLDocument
:
XMLDocument()
XMLHttpRequest
:
XMLHttpRequest()
XMLHttpRequestEventTarget
:
XMLHttpRequestEventTarget()
XMLHttpRequestUpload
:
XMLHttpRequestUpload()
XMLSerializer
:
XMLSerializer()
XPathEvaluator
:
XPathEvaluator()
XPathExpression
:
XPathExpression()
XPathResult
:
XPathResult()
XSLTProcessor
:
XSLTProcessor()
__defineGetter__
:
__defineGetter__()
__defineSetter__
:
__defineSetter__()
__lookupGetter__
:
__lookupGetter__()
__lookupSetter__
:
__lookupSetter__()
addEventListener
:
addEventListener()
alert
:
alert()
applicationCache
:
ApplicationCache
atob
:
atob()
blur
:
()
btoa
:
btoa()
caches
:
CacheStorage
cancelAnimationFrame
:
cancelAnimationFrame()
cancelIdleCallback
:
cancelIdleCallback()
captureEvents
:
captureEvents()
chrome
:
Object
clearInterval
:
clearInterval()
clearTimeout
:
clearTimeout()
clientInformation
:
Navigator
close
:
()
closed
:
false
confirm
:
confirm()
console
:
Object
constructor
:
Window()
createImageBitmap
:
createImageBitmap()
crypto
:
Crypto
decodeURI
:
decodeURI()
decodeURIComponent
:
decodeURIComponent()
defaultStatus
:
""
defaultstatus
:
""
deferConfig
:
deferConfig(func)
devicePixelRatio
:
2
dispatchEvent
:
dispatchEvent()
document
:
document
encodeURI
:
encodeURI()
encodeURIComponent
:
encodeURIComponent()
escape
:
escape()
eval
:
eval()
event
:
undefined
external
:
Object
fetch
:
fetch()
find
:
find()
focus
:
()
frameElement
:
null
frames
:
Window
getComputedStyle
:
getComputedStyle()
getMatchedCSSRules
:
getMatchedCSSRules()
getSelection
:
getSelection()
hasOwnProperty
:
hasOwnProperty()
history
:
History
indexedDB
:
IDBFactory
innerHeight
:
1676
innerWidth
:
980
isFinite
:
isFinite()
isNaN
:
isNaN()
isPrototypeOf
:
isPrototypeOf()
isSecureContext
:
true
length
:
0
localStorage
:
Storage
location
:
Location
locationbar
:
BarProp
matchMedia
:
matchMedia()
menubar
:
BarProp
moveBy
:
moveBy()
moveTo
:
moveTo()
name
:
""
navigator
:
Navigator
offscreenBuffering
:
true
onabort
:
null
onanimationend
:
null
onanimationiteration
:
null
onanimationstart
:
null
onbeforeunload
:
null
onblur
:
null
oncancel
:
null
oncanplay
:
null
oncanplaythrough
:
null
onchange
:
null
onclick
:
null
onclose
:
null
oncontextmenu
:
null
oncuechange
:
null
ondblclick
:
null
ondevicemotion
:
null
ondeviceorientation
:
null
ondeviceorientationabsolute
:
null
ondrag
:
null
ondragend
:
null
ondragenter
:
null
ondragleave
:
null
ondragover
:
null
ondragstart
:
null
ondrop
:
null
ondurationchange
:
null
onemptied
:
null
onended
:
null
onerror
:
null
onfocus
:
null
onhashchange
:
null
oninput
:
null
oninvalid
:
null
onkeydown
:
null
onkeypress
:
null
onkeyup
:
null
onlanguagechange
:
null
onload
:
null
onloadeddata
:
null
onloadedmetadata
:
null
onloadstart
:
null
onmessage
:
null
onmousedown
:
null
onmouseenter
:
null
onmouseleave
:
null
onmousemove
:
null
onmouseout
:
null
onmouseover
:
null
onmouseup
:
null
onmousewheel
:
null
onoffline
:
null
ononline
:
null
onpagehide
:
null
onpageshow
:
null
onpause
:
null
onplay
:
null
onplaying
:
null
onpopstate
:
null
onprogress
:
null
onratechange
:
null
onrejectionhandled
:
null
onreset
:
null
onresize
:
null
onscroll
:
null
onsearch
:
null
onseeked
:
null
onseeking
:
null
onselect
:
null
onshow
:
null
onstalled
:
null
onstorage
:
null
onsubmit
:
null
onsuspend
:
null
ontimeupdate
:
null
ontoggle
:
null
ontransitionend
:
null
onunhandledrejection
:
null
onunload
:
null
onvolumechange
:
null
onwaiting
:
null
onwebkitanimationend
:
null
onwebkitanimationiteration
:
null
onwebkitanimationstart
:
null
onwebkittransitionend
:
null
onwheel
:
null
open
:
open()
openDatabase
:
openDatabase()
opener
:
null
outerHeight
:
547
outerWidth
:
320
pageXOffset
:
0
pageYOffset
:
0
parent
:
Window
parseFloat
:
parseFloat()
parseInt
:
parseInt()
performance
:
Performance
personalbar
:
BarProp
postMessage
:
()
print
:
print()
prompt
:
prompt()
propertyIsEnumerable
:
propertyIsEnumerable()
releaseEvents
:
releaseEvents()
removeEventListener
:
removeEventListener()
requestAnimationFrame
:
requestAnimationFrame()
requestIdleCallback
:
requestIdleCallback()
resizeBy
:
resizeBy()
resizeTo
:
resizeTo()
screen
:
Screen
screenLeft
:
0
screenTop
:
0
screenX
:
0
screenY
:
0
scroll
:
scroll()
scrollBy
:
scrollBy()
scrollTo
:
scrollTo()
scrollX
:
0
scrollY
:
0
scrollbars
:
BarProp
self
:
Window
sessionStorage
:
Storage
setInterval
:
setInterval()
setTimeout
:
setTimeout()
speechSynthesis
:
SpeechSynthesis
status
:
""
statusbar
:
BarProp
stop
:
stop()
styleMedia
:
StyleMedia
toLocaleString
:
toLocaleString()
toString
:
toString()
toolbar
:
BarProp
top
:
Window
undefined
:
undefined
unescape
:
unescape()
valueOf
:
valueOf()
webkitAudioContext
:
AudioContext()
webkitCancelAnimationFrame
:
webkitCancelAnimationFrame()
webkitCancelRequestAnimationFrame
:
webkitCancelRequestAnimationFrame()
webkitIDBCursor
:
IDBCursor()
webkitIDBDatabase
:
IDBDatabase()
webkitIDBFactory
:
IDBFactory()
webkitIDBIndex
:
IDBIndex()
webkitIDBKeyRange
:
IDBKeyRange()
webkitIDBObjectStore
:
IDBObjectStore()
webkitIDBRequest
:
IDBRequest()
webkitIDBTransaction
:
IDBTransaction()
webkitIndexedDB
:
IDBFactory
webkitMediaStream
:
MediaStream()
webkitOfflineAudioContext
:
OfflineAudioContext()
webkitRTCPeerConnection
:
RTCPeerConnection()
webkitRequestAnimationFrame
:
webkitRequestAnimationFrame()
webkitRequestFileSystem
:
webkitRequestFileSystem()
webkitResolveLocalFileSystemURL
:
webkitResolveLocalFileSystemURL()
webkitSpeechGrammar
:
SpeechGrammar()
webkitSpeechGrammarList
:
SpeechGrammarList()
webkitSpeechRecognition
:
SpeechRecognition()
webkitSpeechRecognitionError
:
SpeechRecognitionError()
webkitSpeechRecognitionEvent
:
SpeechRecognitionEvent()
webkitStorageInfo
:
DeprecatedStorageInfo
webkitURL
:
URL()
window
:
Window
Symbol(Symbol.toStringTag)
:
"Window"
-History:
1.21.0 / 2016-06-01
===================

  * Added XML configuration @tusharmath

1.20.4 / 2016-05-23
===================

  * Fixed a regression with extending prototype methods @tahoemph

1.20.3 / 2016-05-18
===================

  * Fixed a regression with 1.20.2 @kgoerlitz
  * Added test to prevent this in the future @kgoerlitz

1.20.2 / 2016-05-17
===================

  * node v6 compatiblity: remove deprecated __lookupGetter__ use - @thetalecrafter
  * node v6 compatiblity: handle different SyntaxError format - @pwwolf

1.20.1 / 2016-04-08
===================

  * Simplify truthiness check - @markstos
  * Remove errant console.log - @markstos

1.20.0 / 2016-04-06
===================

  * Typo fix @jchip
  * Handle null sub-object @wmertens
  * Bug fix for NODE_CONFIG_STRICT_MODE check @markstos
  * Ran node security check on 4/6/2016 with the following output

    $ nsp check
    (+) No known vulnerabilities found

1.19.0 / 2016-01-08
===================

  * Resolve defered values in predictable order for consistent results. 
    Fixes #265 @elliotttf @markstos

1.18.0 / 2015-11-17
===================

  * More robust handling of JSON @elliotttf

1.17.1 / 2015-11-17
===================

  * Patch release for regex bugfix
 
1.17.0 / 2015-11-17
===================

  * Update warning about missing configuration files to mention how to disable the warning #245 @markstos 
  * Upgrade to run CI with travis containers @lorenwest
  * Fixed bug with comments and inline json @elliotttf

1.16.0 / 2015-09-03
===================

  * Change == to === to tighten equality tests #242 @wgpsutherland
  * Fix attachProtoDeep for setModuleDefaults #243 @benkroeger

1.15.0 / 2015-07-30
===================

  * Added full hostname in addition to first segment @vicary

1.14.0 / 2015-06-02
===================

  * Added JSON parsing to custom environment variables @leachiM2k
  * Handle unicode BOM characters @johndkane

1.13.0 / 2015-05-05
===================

  * Updated CSON library @dsimidzija

1.12.0 / 2015-02-19
===================

  * Better date merging @axelhzf

1.11.0 / 2015-01-14
===================

  * Added Hjson support @laktak

1.10.0 / 2015-01-06
===================

  * Added TOML support (@jasonhansel)
  * Another year - changed copyright messages for 2015
  * Updated contributors list
  * New Strict Mode added in 1.9.0 is now documented. (@markstos)
  * has() now returns false when given an undefined or null key to look up. Previously it threw an exception. (@markstos)
  * When get() is given an undefined or null key to look up, it now throws a more helpful diagnostic (@robludwig, @markstos)

1.9.0 / 2014-12-08
==================

  * New strictness checks have been added to ensure the expected configuration has been loaded. Warnings are now thrown in these cases. If NODE_CONFIG_STRICT_MODE is set, exceptions are thrown instead. (@markstos)
    * There must be an explicit config file matching `NODE_ENV` if `NODE_ENV` is set.
    * There must be an explicit config file matching `NODE_APP_INSTANCE` if `NODE_APP_INSTANCE` is set
    * `NODE_ENV` must not match 'default' or 'local' to avoid ambiguity.

  * Added .iced extension support (@arthanzel)

  * Highlight `config.has()` in the README. Use it to check to if a value exists, since `config.get()`
    throws exceptions on undefined values. (@markstos)

  * API Change: getConfigSources() now starts to return data on config files that are valid-but-empty. (@markstos)

1.8.1 / 2014-11-14
==================

  * Simplify syntax for defer() functions. The 'this' value in the functions is now bound
    to the main configuration object, so it doesn't have to be passed into the function. (@markstos)
  * new defer sub-module introduced in 1.8.0 can now be accessed by require('config/defer')
    For usage, see: https://github.com/lorenwest/node-config/wiki/Configuration-Files#javascript-module---js
  * Add test coverage for array merging cases. (@markstos)
  * Bump dependency on cson package to 1.6.1 (@markstos)

1.8.0 / 2014-11-13
==================

  * Added deferred function for evaluating configs after load (@markstos)
    For details, see: https://github.com/lorenwest/node-config/wiki/Configuration-Files#javascript-module---js
  * Bumped js-yaml dependency (@markstos)

1.7.0 / 2014-10-30
==================

  * Added variable substitution in .properties files (@ncuillery)

1.6.0 / 2014-10-22
==================

  * Added support for property accessors in configs (@jaylynch)

1.5.0 / 2014-10-20
==================

  * Added support for .json5 config files (@bertrandom) 

1.4.0 / 2014-10-16
==================

  * Added support for .properties config files (@superoven)

1.3.0 / 2014-10-15
==================

  * Added support for CSON configuration files (@superoven)

1.2.4 / 2014-10-10
==================

  * Repaired the 1.2.3 fix to work both before and after the first get()

1.2.3 / 2014-10-03
==================

  * Changed test suite to verify a bug in util.setModuleDefaults()
  * Fixed util.setModuleDefaults() to work after a get() (and pass the new test)

1.2.2 / 2014-10-03
==================

  * Added support for regexp and date configurations (@diversario)

1.2.1 / 2014-09-23
==================

  * Wrote test to prove setModuleDefaults() was broken in 1.2.0
  * Fixed setModuleDefaults() to not rely on immutable configs

1.2.0 / 2014-09-15
==================

  * Feature release
  * Delaying immutability until after first get() - for external configs
  * Allowing immutability override with $ALLOW_CONFIG_MUTATIONS=Y


1.1.1 / 2014-09-03
==================

  * @th507 - Update support for Coffee-script >=1.7.0

1.1.0 / 2014-09-03
==================

  * Feature release
  * @bradboro - Custom environment variables
  * @supersheep - Catch error when requiring visionmedia yaml module

1.0.2 / 2014-07-30
===================

  * @bradobro - Fixed a variable from leaking into global
  * @tilfin - Removed un-necessary YAML comment filtering for js-yaml

1.0.1 / 2014-07-25
===================

  * Removed test directory from npm install

1.0.0 / 2014-07-23
===================

  * Major revision.  Upgrade notes:
    https://github.com/lorenwest/node-config/wiki/Upgrading-From-Config-0.x
  * Update to semver versioning
  * Change load ordering
      from hostname.EXT --> deployment.EXT
      to deployment.EXT --> hostname.EXT
  * Allow makeImmutable to accept an array of attributes
  * Allow makeImmutable to accept no attrs, making all attributes immutable
  * Allow recursion in makeImmutable, if an attribute is an object
  * Change node-config behavior to make all configurations immutable
  * Removed getOriginalConfig as no longer necessary post-immutable
  * Removed runtime.json file writing and monitoring
  * Removed previously deprecated $CONFIG_* environment configurations
  * Deprecated the attribute watch functionality
  * Added error output if no configurations found
  * Exposed config loading for alternate configurations
  * Added config.get() and config.has() methods & tests
  * Removed reliance on global.NODE_CONFIG so older versions can work with 1.x
  * Fix empty YAML file causing crash with latest js-yaml
  * Added SUPPRESS_NO_CONFIG_WARNING for better sub-module support
  * Moved all documentation [to the wiki](https://github.com/lorenwest/node-config/wiki).

0.4.37 / 2014-07-22
===================

  * Fix empty YAML file causing crash with latest js-yaml

0.4.36 / 2014-05-27
===================

  * Not writing runtime.json if not used

0.4.35 / 2014-01-16
===================

  * NODE_CONFIG_DIR can now contain a relative path for .js and .coffee configurations

0.4.34 / 2014-01-06
===================

  * Updated copyright year

0.4.33 / 2013-10-25
===================

  * Assure writes to runtime.json are atomic

0.4.32 / 2013-10-24
===================

  * Don't freak out if running without a config directory
  * Don't be so chatty if runtime.json doesn't exist

0.4.31 / 2013-10-18
===================

  * Changed getConfigSources to copy array vs. object

0.4.30 / 2013-09-12
===================

  * More consistent array extension
  * No longer requiring a config directory
  * Not erroneously writing runtime.json
  * Exposing the original configuration sources
  * Added --NODE_CONFIG={json} command line overrides
  * Added $NODE_CONFIG={json} environment variable overrides
  * Consistent handling of environment variables and command line parameters
  * Reached 100 regression tests

0.4.29 / 2013-08-07
===================

  * Added flag for disabling the write of runtime.json

0.4.28 / 2013-07-31
===================

  * Eliminated a totally annoying install warning in newer versions of NPM

0.4.27 / 2013-06-18
===================

  * Fixed a bug preventing double underscores in config environment variables

0.4.26 / 2013-06-10
===================

  * Re-watch file on rename (allows editing runtime.json with vi)
  * Allow runtime.json file watch disable via NODE_CONFIG_DISABLE_FILE_WATCH=Y
  * Change no yaml parser error message to suggest using js-yaml
  * Changed default clone depth from 6 to 20 to allow for deeper configurations

0.4.25 / 2013-05-24
===================

  * Dont fail if config directory doesnt exist

0.4.24 / 2013-04-13
===================

  * Added resetRuntime() to reset the runtime.json file
  * Updated docs to reflect the new public method

0.4.23 / 2013-04-13
===================

  * Multiple application instance support via $NODE_APP_INSTANCE
  * Multi-app testing & documentation

0.4.22 / 2013-03-29
===================

  * Added configuration $CONFIG_* environment variables
  * Added $CONFIG_* documentation and tests
  * Added NodeJS 0.10 integration test

0.4.21 / 2013-03-06
===================

  * Triggering file.watch when an editor saves a file - rename vs. change
  * Installed Travis-CI continuous integration testing framework

0.4.20 / 2013-02-21
===================

  * Merged _diffDeep fix

0.4.19 / 2013-02-21
===================

  * Added discovery of .yml in addition to .yaml for YAML configs (w/doc)
  * Added testing of .yml file discovery
  * Removed licensing inconsistencies

0.4.18 / 2012-10-30
===================

  * Moved coffee-script and js-yaml from optionalDependencies back to
    devDependencies to trim the install size for those not needing
    these packages.
  * Promoted $HOSTNAME and $HOST above OS.hostname()

0.4.17 / 2012-09-26
===================

  * Allow the location of runtime.json to be picked up from the environment
  * Added documentation for the NODE_CONFIG_RUNTIME_JSON environment variable
  * package.json cleanup - created optionalDependencies and devDependencies

0.4.16 / 2012-08-09
===================

  * Allowing a zero interval in watchForConfigFileChanges() to disable file watching.
  * Fixed a comparator bug in _equalsDeep()
  * Added a test to confirm deep extending array functionality

0.4.15 / 2012-06-04
===================

  * Placed YAML and Coffee-Script libraries back into the download.  Still lazy loading into memory.

0.4.14 / 2012-06-01
===================

  * Added the local.EXT and local-deployment.EXT configs.
  * Removed unnecessary debug output
  * Added retry logic on file parse to reduce read/write collisions
  * Added support for a better YAML parser
  * Fixed problems with null configuration values

0.4.13 / 2012-04-25
===================

  * Assuring the runtime.json file exists.  Undocumented fs.watch() requirement.

0.4.12 / 2012-04-25
===================

  * Removed all external dependencies
  * Lazy loading of yaml and coffee-script only if these file types are used
  * Added new style file watching if available (retaining pre 6.0 compatibility)
  * Windows compatibility - file watching changes were required

0.4.11 / 2012-02-15
===================

  * Automatically watching runtime.json for changes
  * Fixed a date comparison bug during file watching
  * Changed require('sys') to require('util')

0.4.10 / 2012-01-18
===================

  * Made sure the CONFIG object is a shared singleton
  * Added NODE_CONFIG_DIR environment variable to point to a different directory
  * Added tests and documentation for the above

0.4.9 / 2012-01-06
==================

  * Added coffee-script file type support with extension .coffee
  * Added an example coffee-script configuration file
  * Added coffee-script module dependency
  * Added a test for coffee-script configuration files
  * Documented coffee-script support, regenerated documentation

0.4.8 / 2011-12-20
==================

  * Fixed a bug where changes to module default configs weren't persisted
  * Added a test to validate the bugfix

0.4.7 / 2011-12-16
==================

  * Created the makeHidden method to hide a property of an object
  * Added a value argument to makeImmutable for creating new properties
  * Fixed setModuleDefaults to hide injected prototype methods
  * Added documentation and unit tests

0.4.6 / 2011-11-29
==================

  * Updated vows from 0.5.8 to 0.5.13

0.4.5 / 2011-11-16
==================

  * Updated YAML dependency from "0.1.x" to ">=0.2.2"
  * Added stripping of comment-only and whitespace-only lines in YAML files for backward compatibility
  * Added more tests for YAML edge cases
  * Added a homepage link in package.json to the online documentation
  * Added History.md

0.4.4 / 2011-11-08
==================

  * Removed deprecated modules from package.json

0.4.3 / 2011-08-02
==================

  * Made watchForConfigFileChanges public

0.4.2 / 2011-07-11
==================

  * Added comment stripping from JSON configuration files

0.4.1 / 2011-07-07
==================

  * Added more tests
  * Return the module config in setModuleDefaults

0.4.0 / 2011-07-06
==================

  * Update to version 0.4.0

    * Online documentation
    * Runtime configuration changes
    * Configuration value watching
    * Multi-instance node deployments
    * Better module developer support
    -License:
// Copyright 2010-2015, Loren West and other contributors

// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to
// deal in the Software without restriction, including without limitation the
// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
// sell copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
// IN THE SOFTWARE.

-Package:
{
  "_args": [
    [
      {
        "raw": "config",
        "scope": null,
        "escapedName": "config",
        "name": "config",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "C:\\Users\\Axioo"
    ]
  ],
  "_from": "config@latest",
  "_id": "config@1.21.0",
  "_inCache": true,
  "_installable": true,
  "_location": "/config",
  "_nodeVersion": "0.12.7",
  "_npmOperationalInternal": {
    "host": "packages-16-east.internal.npmjs.com",
    "tmp": "tmp/config-1.21.0.tgz_1464823602378_0.8276554537005723"
  },
  "_npmUser": {
    "name": "lorenwest",
    "email": "npm@lorenwest.com"
  },
  "_npmVersion": "2.11.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "config",
    "scope": null,
    "escapedName": "config",
    "name": "config",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/config/-/config-1.21.0.tgz",
  "_shasum": "83719c0263a669e4bc4cc9c9e5818cd996a32cb9",
  "_shrinkwrap": null,
  "_spec": "config",
  "_where": "C:\\Users\\Axioo",
  "author": {
    "name": "Loren West",
    "email": "open_source@lorenwest.com"
  },
  "bugs": {
    "url": "https://github.com/lorenwest/node-config/issues"
  },
  "dependencies": {
    "json5": "0.4.0"
  },
  "description": "Configuration control for production node deployments",
  "devDependencies": {
    "coffee-script": ">=1.7.0",
    "cson": "^3.0.1",
    "hjson": "^1.2.0",
    "js-yaml": "^3.2.2",
    "properties": "~1.2.1",
    "toml": "^2.0.6",
    "underscore": "^1.8.3",
    "vows": ">=0.8.1",
    "x2js": "^2.0.1"
  },
  "directories": {
    "lib": "./lib"
  },
  "dist": {
    "shasum": "83719c0263a669e4bc4cc9c9e5818cd996a32cb9",
    "tarball": "https://registry.npmjs.org/config/-/config-1.21.0.tgz"
  },
  "engines": {
    "node": ">0.4.x"
  },
  "gitHead": "14c39cceac974533e36e5e2b95bcc4db501a2917",
  "homepage": "http://lorenwest.github.com/node-config",
  "keywords": [
    "conf",
    "config",
    "configuration",
    "node-config",
    "config-node",
    "env",
    "environment"
  ],
  "license": "MIT",
  "main": "./lib/config.js",
  "maintainers": [
    {
      "name": "lorenwest",
      "email": "npm@lorenwest.com"
    }
  ],
  "name": "config",
  "optionalDependencies": {},
  "readme": "ERROR: No README data found!",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/lorenwest/node-config.git"
  },
  "scripts": {
    "test": "./node_modules/vows/bin/vows test/*.js --spec"
  },
  "version": "1.21.0"
}

-README:
Configure your Node.js Applications
===================================

[![NPM](https://nodei.co/npm/config.svg?downloads=true&downloadRank=true)](https://nodei.co/npm/config/)&nbsp;&nbsp;
[![Build Status](https://secure.travis-ci.org/lorenwest/node-config.svg?branch=master)](https://travis-ci.org/lorenwest/node-config)&nbsp;&nbsp;
[release notes](https://github.com/lorenwest/node-config/blob/master/History.md)

Introduction
------------

Node-config organizes hierarchical configurations for your app deployments.

It lets you define a set of default parameters,
and extend them for different deployment environments (development, qa,
staging, production, etc.).

Configurations are stored in [configuration files](https://github.com/lorenwest/node-config/wiki/Configuration-Files) within your application, and can be overridden and extended by [environment variables](https://github.com/lorenwest/node-config/wiki/Environment-Variables),
 [command line parameters](https://github.com/lorenwest/node-config/wiki/Command-Line-Overrides), or [external sources](https://github.com/lorenwest/node-config/wiki/Configuring-from-an-External-Source).

This gives your application a consistent configuration interface shared among a
[growing list of npm modules](https://www.npmjs.org/browse/depended/config) also using node-config.

Project Guidelines
------------------

* *Simple* - Get started fast
* *Powerful* - For multi-node enterprise deployment
* *Flexible* - Supporting multiple config file formats
* *Lightweight* - Small file and memory footprint
* *Predictable* - Well tested foundation for module and app developers

Quick Start
---------------
The following examples are in JSON format, but configurations can be in other [file formats](https://github.com/lorenwest/node-config/wiki/Configuration-Files#file-formats).

**Install in your app directory, and edit the default config file.**

```shell
$ npm install config
$ mkdir config
$ vi config/default.json
```
```js
{
  // Customer module configs
  "Customer": {
    "dbConfig": {
      "host": "localhost",
      "port": 5984,
      "dbName": "customers"
    },
    "credit": {
      "initialLimit": 100,
      // Set low for development
      "initialDays": 1
    }
  }
}
```

**Edit config overrides for production deployment:**

```shell
 $ vi config/production.json
```

```json
{
  "Customer": {
    "dbConfig": {
      "host": "prod-db-server"
    },
    "credit": {
      "initialDays": 30
    }
  }
}
```

**Use configs in your code:**

```js
var config = require('config');
//...
var dbConfig = config.get('Customer.dbConfig');
db.connect(dbConfig, ...);

if (config.has('optionalFeature.detail')) {
  var detail = config.get('optionalFeature.detail');
  //...
}
```

`config.get()` will throw an exception for undefined keys to help catch typos and missing values.
Use `config.has()` to test if a configuration value is defined.

**Start your app server:**

```shell
$ export NODE_ENV=production
$ node my-app.js
```

Running in this configuration, the `port` and `dbName` elements of `dbConfig`
will come from the `default.json` file, and the `host` element will
come from the `production.json` override file.

Articles
--------

* [Configuration Files](https://github.com/lorenwest/node-config/wiki/Configuration-Files)
* [Common Usage](https://github.com/lorenwest/node-config/wiki/Common-Usage)
* [Environment Variables](https://github.com/lorenwest/node-config/wiki/Environment-Variables)
* [Reserved Words](https://github.com/lorenwest/node-config/wiki/Reserved-Words)
* [Command Line Overrides](https://github.com/lorenwest/node-config/wiki/Command-Line-Overrides)
* [Multiple Node Instances](https://github.com/lorenwest/node-config/wiki/Multiple-Node-Instances)
* [Sub-Module Configuration](https://github.com/lorenwest/node-config/wiki/Sub-Module-Configuration)
* [Configuring from a DB / External Source](https://github.com/lorenwest/node-config/wiki/Configuring-from-an-External-Source)
* [External Configuration Management Tools](https://github.com/lorenwest/node-config/wiki/External-Configuration-Management-Tools)
* [Examining Configuration Sources](https://github.com/lorenwest/node-config/wiki/Examining-Configuration-Sources)
* [Using Config Utilities](https://github.com/lorenwest/node-config/wiki/Using-Config-Utilities)
* [Upgrading from Config 0.x](https://github.com/lorenwest/node-config/wiki/Upgrading-From-Config-0.x)

Contributors
------------
<table id="contributors"><tr><td><img src=https://avatars.githubusercontent.com/u/373538?v=3><a href="https://github.com/lorenwest">lorenwest</a></td><td><img src=https://avatars.githubusercontent.com/u/25829?v=3><a href="https://github.com/markstos">markstos</a></td><td><img src=https://avatars.githubusercontent.com/u/447151?v=3><a href="https://github.com/elliotttf">elliotttf</a></td><td><img src=https://avatars.githubusercontent.com/u/66902?v=3><a href="https://github.com/leachiM2k">leachiM2k</a></td><td><img src=https://avatars.githubusercontent.com/u/791137?v=3><a href="https://github.com/josx">josx</a></td><td><img src=https://avatars.githubusercontent.com/u/133277?v=3><a href="https://github.com/enyo">enyo</a></td></tr><tr><td><img src=https://avatars.githubusercontent.com/u/2675698?v=3><a href="https://github.com/rundef">rundef</a></td><td><img src=https://avatars.githubusercontent.com/u/1077378?v=3><a href="https://github.com/arthanzel">arthanzel</a></td><td><img src=https://avatars.githubusercontent.com/u/1656140?v=3><a href="https://github.com/eheikes">eheikes</a></td><td><img src=https://avatars.githubusercontent.com/u/355800?v=3><a href="https://github.com/diversario">diversario</a></td><td><img src=https://avatars.githubusercontent.com/u/138707?v=3><a href="https://github.com/th507">th507</a></td><td><img src=https://avatars.githubusercontent.com/u/842998?v=3><a href="https://github.com/nsabovic">nsabovic</a></td></tr><tr><td><img src=https://avatars.githubusercontent.com/u/506460?v=3><a href="https://github.com/Osterjour">Osterjour</a></td><td><img src=https://avatars.githubusercontent.com/u/175627?v=3><a href="https://github.com/axelhzf">axelhzf</a></td><td><img src=https://avatars.githubusercontent.com/u/7782055?v=3><a href="https://github.com/benkroeger">benkroeger</a></td><td><img src=https://avatars.githubusercontent.com/u/1246875?v=3><a href="https://github.com/jaylynch">jaylynch</a></td><td><img src=https://avatars.githubusercontent.com/u/145742?v=3><a href="https://github.com/jberrisch">jberrisch</a></td><td><img src=https://avatars.githubusercontent.com/u/1918551?v=3><a href="https://github.com/nitzan-shaked">nitzan-shaked</a></td></tr><tr><td><img src=https://avatars.githubusercontent.com/u/3058150?v=3><a href="https://github.com/Alaneor">Alaneor</a></td><td><img src=https://avatars.githubusercontent.com/u/498929?v=3><a href="https://github.com/roncli">roncli</a></td><td><img src=https://avatars.githubusercontent.com/u/1355559?v=3><a href="https://github.com/superoven">superoven</a></td><td><img src=https://avatars.githubusercontent.com/u/4425455?v=3><a href="https://github.com/ncuillery">ncuillery</a></td><td><img src=https://avatars.githubusercontent.com/u/125062?v=3><a href="https://github.com/keis">keis</a></td><td><img src=https://avatars.githubusercontent.com/u/16861?v=3><a href="https://github.com/abh">abh</a></td></tr><tr><td><img src=https://avatars.githubusercontent.com/u/57770?v=3><a href="https://github.com/bertrandom">bertrandom</a></td><td><img src=https://avatars.githubusercontent.com/u/959858?v=3><a href="https://github.com/laktak">laktak</a></td><td><img src=https://avatars.githubusercontent.com/u/157303?v=3><a href="https://github.com/cmcculloh">cmcculloh</a></td><td><img src=https://avatars.githubusercontent.com/u/270632?v=3><a href="https://github.com/thetalecrafter">thetalecrafter</a></td><td><img src=https://avatars.githubusercontent.com/u/28898?v=3><a href="https://github.com/DMajrekar">DMajrekar</a></td><td><img src=https://avatars.githubusercontent.com/u/5358976?v=3><a href="https://github.com/dsimidzija">dsimidzija</a></td></tr></table>

License
-------

May be freely distributed under the [MIT license](https://raw.githubusercontent.com/lorenwest/node-config/master/LICENSE).

Copyright (c) 2010-2015 Loren West 
[and other contributors](https://github.com/lorenwest/node-config/graphs/contributors)

var config = require('config');
//...
var dbConfig = config.get('Customer.dbConfig');
db.connect(dbConfig);

if (config.has('optionalFeature.detail')) {
  var detail = config.get('optionalFeature.detail');
  //...
}
```
-Via https://tonicdev.com/npm/module-js:
-Returned:
"WARNING: NODE_ENV value of 'product… any deployment config file names."
"WARNING: See https://github.com/lorenwest/node-config/wiki/Strict-Mode"
"WARNING: No configurations found in…onfiguration directory:/app/config"
"WARNING: To disable this warning se…CONFIG_WARNING in the environment."
Error: "Customer.dbConfig" is not defined
message: "Configuration property \"Customer.dbConfig\" is not defined"
stack (getter): function()
stack (setter): function()
Error Prototype


