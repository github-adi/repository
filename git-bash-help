
Administrator@TXXC520ZA99FVXM MINGW32 ~ (master|BISECTING)
$ help
GNU bash, version 4.4.12(1)-release (i686-pc-msys)
These shell commands are defined internally.  Type `help' to see this list.
Type `help name' to find out more about the function `name'.
Use `info bash' to find out more about the shell in general.
Use `man -k' or `info' to find out more about commands not in this list.

A star (*) next to a name means that the command is disabled.

 job_spec [&]                            history [-c] [-d offset] [n] or hist>
 (( expression ))                        if COMMANDS; then COMMANDS; [ elif C>
 . filename [arguments]                  jobs [-lnprs] [jobspec ...] or jobs >
 :                                       kill [-s sigspec | -n signum | -sigs>
 [ arg... ]                              let arg [arg ...]
 [[ expression ]]                        local [option] name[=value] ...
 alias [-p] [name[=value] ... ]          logout [n]
 bg [job_spec ...]                       mapfile [-d delim] [-n count] [-O or>
 bind [-lpsvPSVX] [-m keymap] [-f file>  popd [-n] [+N | -N]
 break [n]                               printf [-v var] format [arguments]
 builtin [shell-builtin [arg ...]]       pushd [-n] [+N | -N | dir]
 caller [expr]                           pwd [-LPW]
 case WORD in [PATTERN [| PATTERN]...)>  read [-ers] [-a array] [-d delim] [->
 cd [-L|[-P [-e]] [-@]] [dir]            readarray [-n count] [-O origin] [-s>
 command [-pVv] command [arg ...]        readonly [-aAf] [name[=value] ...] o>
 compgen [-abcdefgjksuv] [-o option] [>  return [n]
 complete [-abcdefgjksuv] [-pr] [-DE] >  select NAME [in WORDS ... ;] do COMM>
 compopt [-o|+o option] [-DE] [name ..>  set [-abefhkmnptuvxBCHP] [-o option->
 continue [n]                            shift [n]
 coproc [NAME] command [redirections]    shopt [-pqsu] [-o] [optname ...]
 declare [-aAfFgilnrtux] [-p] [name[=v>  source filename [arguments]
 dirs [-clpv] [+N] [-N]                  suspend [-f]
 disown [-h] [-ar] [jobspec ... | pid >  test [expr]
 echo [-neE] [arg ...]                   time [-p] pipeline
 enable [-a] [-dnps] [-f filename] [na>  times
 eval [arg ...]                          trap [-lp] [[arg] signal_spec ...]
 exec [-cl] [-a name] [command [argume>  true
 exit [n]                                type [-afptP] name [name ...]
 export [-fn] [name[=value] ...] or ex>  typeset [-aAfFgilnrtux] [-p] name[=v>
 false                                   ulimit [-SHabcdefiklmnpqrstuvxPT] [l>
 fc [-e ename] [-lnr] [first] [last] o>  umask [-p] [-S] [mode]
 fg [job_spec]                           unalias [-a] name [name ...]
 for NAME [in WORDS ... ] ; do COMMAND>  unset [-f] [-v] [-n] [name ...]
 for (( exp1; exp2; exp3 )); do COMMAN>  until COMMANDS; do COMMANDS; done
 function name { COMMANDS ; } or name >  variables - Names and meanings of so>
 getopts optstring name [arg]            wait [-n] [id ...]
 hash [-lr] [-p pathname] [-dt] [name >  while COMMANDS; do COMMANDS; done
 help [-dms] [pattern ...]               { COMMANDS ; }

Administrator@TXXC520ZA99FVXM MINGW32 ~ (master|BISECTING)
$

Administrator@TXXC520ZA99FVXM MINGW32 ~
$ git --help
usage: git [--version] [--help] [-C <path>] [-c name=value]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone      Clone a repository into a new directory
   init       Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add        Add file contents to the index
   mv         Move or rename a file, a directory, or a symlink
   reset      Reset current HEAD to the specified state
   rm         Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect     Use binary search to find the commit that introduced a bug
   grep       Print lines matching a pattern
   log        Show commit logs
   show       Show various types of objects
   status     Show the working tree status

grow, mark and tweak your common history
   branch     List, create, or delete branches
   checkout   Switch branches or restore working tree files
   commit     Record changes to the repository
   diff       Show changes between commits, commit and working tree, etc
   merge      Join two or more development histories together
   rebase     Reapply commits on top of another base tip
   tag        Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch      Download objects and refs from another repository
   pull       Fetch from and integrate with another repository or a local branch
   push       Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.

Administrator@TXXC520ZA99FVXM MINGW32 ~
$

-git bisect:

Administrator@TXXC520ZA99FVXM MINGW32 ~ (master)
$ git bisect
usage: git bisect [help|start|bad|good|new|old|terms|skip|next|reset|visualize|replay|log|run]

-git bisect help:

Administrator@TXXC520ZA99FVXM MINGW32 ~ (master)
$ git bisect help
usage: git bisect [help|start|bad|good|new|old|terms|skip|next|reset|visualize|replay|log|run]

git bisect help
        print this long help message.
git bisect start [--term-{old,good}=<term> --term-{new,bad}=<term>]
                 [--no-checkout] [<bad> [<good>...]] [--] [<pathspec>...]
        reset bisect state and start bisection.
git bisect (bad|new) [<rev>]
        mark <rev> a known-bad revision/
                a revision after change in a given property.
git bisect (good|old) [<rev>...]
        mark <rev>... known-good revisions/
                revisions before change in a given property.
git bisect terms [--term-good | --term-bad]
        show the terms used for old and new commits (default: bad, good)
git bisect skip [(<rev>|<range>)...]
        mark <rev>... untestable revisions.
git bisect next
        find next bisection to test and check it out.
git bisect reset [<commit>]
        finish bisection search and go back to commit.
git bisect visualize
        show bisect status in gitk.
git bisect replay <logfile>
        replay bisection log.
git bisect log
        show bisect log.
git bisect run <cmd>...
        use <cmd>... to automatically bisect.

Please use "git help bisect" to get the full man page.

Administrator@TXXC520ZA99FVXM MINGW32 ~ (master)
$

-instal git help config
-Returned: copy and paste to search engine:

file:///C:/Program%20Files/Git/mingw32/share/doc/git-doc/git-config.html

-git --info-path

Administrator@TXXC520ZA99FVXM MINGW32 ~ (master|BISECTING)
$ git --info-path
C:\Program Files\Git\mingw32/share/info

Administrator@TXXC520ZA99FVXM MINGW32 ~ (master|BISECTING)
$

-git -C C:\Program Files\Git\mingw32/share/info

Administrator@TXXC520ZA99FVXM MINGW32 ~ (master|BISECTING)
$ git -C C:\Program Files\Git\mingw32/share/info
fatal: Cannot change to 'C:Program': No such file or directory

Administrator@TXXC520ZA99FVXM MINGW32 ~ (master|BISECTING)
$

-git --exec-path

Administrator@TXXC520ZA99FVXM MINGW32 ~ (master|BISECTING)
$ git --exec-path[=C:\Program Files\Git\cmd\git-ui]
C:\Program Files\Git\mingw32/libexec/git-core

Administrator@TXXC520ZA99FVXM MINGW32 ~ (master|BISECTING)
$

-git --html-path

Administrator@TXXC520ZA99FVXM MINGW32 ~ (master|BISECTING)
$ git --html-path
C:\Program Files\Git\mingw32/share/doc/git-doc

Administrator@TXXC520ZA99FVXM MINGW32 ~ (master|BISECTING)
$

-git --man-path

Administrator@TXXC520ZA99FVXM MINGW32 ~ (master|BISECTING)
$ git --man-path
C:\Program Files\Git\mingw32/share/man

Administrator@TXXC520ZA99FVXM MINGW32 ~ (master|BISECTING)
$

-git --work-tree=init

Administrator@TXXC520ZA99FVXM MINGW32 ~ (master|BISECTING)
$ git --work-tree=init
usage: git [--version] [--help] [-C <path>] [-c name=value]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone      Clone a repository into a new directory
   init       Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add        Add file contents to the index
   mv         Move or rename a file, a directory, or a symlink
   reset      Reset current HEAD to the specified state
   rm         Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect     Use binary search to find the commit that introduced a bug
   grep       Print lines matching a pattern
   log        Show commit logs
   show       Show various types of objects
   status     Show the working tree status

grow, mark and tweak your common history
   branch     List, create, or delete branches
   checkout   Switch branches or restore working tree files
   commit     Record changes to the repository
   diff       Show changes between commits, commit and working tree, etc
   merge      Join two or more development histories together
   rebase     Reapply commits on top of another base tip
   tag        Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch      Download objects and refs from another repository
   pull       Fetch from and integrate with another repository or a local branch
   push       Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.

Administrator@TXXC520ZA99FVXM MINGW32 ~ (master|BISECTING)
$

-git init C:\Users\Administrator\

Administrator@TXXC520ZA99FVXM MINGW32 ~ (master|BISECTING)
$ git init C:\Users\Administrator\
> .git\config
Reinitialized existing Git repository in C:/Users/Administrator/UsersAdministrator.gitconfig/.git/

Administrator@TXXC520ZA99FVXM MINGW32 ~ (master|BISECTING)
$

-git branch

Administrator@TXXC520ZA99FVXM MINGW32 ~ (master|BISECTING)
$ git branch --set-upstream-to=gh-pages master
fatal: branch 'master' does not exist

Administrator@TXXC520ZA99FVXM MINGW32 ~ (master|BISECTING)
$ git branch  --set upstream-to=gh-pages
error: Ambiguous option: set (could be --set-upstream or --set-upstream-to)
usage: git branch [<options>] [-r | -a] [--merged | --no-merged]
   or: git branch [<options>] [-l] [-f] <branch-name> [<start-point>]
   or: git branch [<options>] [-r] (-d | -D) <branch-name>...
   or: git branch [<options>] (-m | -M) [<old-branch>] <new-branch>
   or: git branch [<options>] [-r | -a] [--points-at]
   or: git branch [<options>] [-r | -a] [--format]

Generic options
    -v, --verbose         show hash and subject, give twice for upstream branch
    -q, --quiet           suppress informational messages
    -t, --track           set up tracking mode (see git-pull(1))
    --set-upstream        change upstream info
    -u, --set-upstream-to <upstream>
                          change the upstream info
    --unset-upstream      Unset the upstream info
    --color[=<when>]      use colored output
    -r, --remotes         act on remote-tracking branches
    --contains <commit>   print only branches that contain the commit
    --no-contains <commit>
                          print only branches that don't contain the commit
    --abbrev[=<n>]        use <n> digits to display SHA-1s

Specific git-branch actions:
    -a, --all             list both remote-tracking and local branches
    -d, --delete          delete fully merged branch
    -D                    delete branch (even if not merged)
    -m, --move            move/rename a branch and its reflog
    -M                    move/rename a branch, even if target exists
    --list                list branch names
    -l, --create-reflog   create the branch's reflog
    --edit-description    edit the description for the branch
    -f, --force           force creation, move/rename, deletion
    --merged <commit>     print only branches that are merged
    --no-merged <commit>  print only branches that are not merged
    --column[=<style>]    list branches in columns
    --sort <key>          field name to sort on
    --points-at <object>  print only branches of the object
    -i, --ignore-case     sorting and filtering are case insensitive
    --format <format>     format to use for the output


Administrator@TXXC520ZA99FVXM MINGW32 ~ (master|BISECTING)
$

-git commit -m "ADI"

Administrator@TXXC520ZA99FVXM MINGW32 ~ (master|BISECTING)
$ git commit -m "My First Commit" https://github.com/github-adi/repository/blob/master/git-bash-help
error: pathspec 'https://github.com/github-adi/repository/blob/master/git-bash-help' did not match any file(s) known to git.

Administrator@TXXC520ZA99FVXM MINGW32 ~ (master|BISECTING)
$ git commit -m "ADI"
On branch master
You are currently bisecting, started from branch 'master'.


Initial commit

Untracked files:
        .babelrc
        .bash_history
        .config/
        .gitconfig
        .node_repl_history
        .ssh/
        .viminfo
        3D Objects/
        AppData/
        Contacts/
        Desktop/
        Documents/
        Downloads/
        Favorites/
        KLN INFEED-dream-co-id
        Links/
        MicrosoftEdgeBackups/
        Music/
        NTUSER.DAT
        NTUSER.DAT{0ed1b5f8-3d86-11e8-a9df-7cfe90913f20}.TM.blf
        NTUSER.DAT{0ed1b5f8-3d86-11e8-a9df-7cfe90913f20}.TMContainer00000000000000000001.regtrans-ms
        NTUSER.DAT{0ed1b5f8-3d86-11e8-a9df-7cfe90913f20}.TMContainer00000000000000000002.regtrans-ms
        OneDrive/
        Pictures/
        Saved Games/
        Searches/
        Tracing/
        UsersAdministratorDocumentscircleciconfig.yml
        Videos/
        YandexDisk/
        demos/
        jsfiddle-api@0.0.1
        jsfiddler
        mesa/
        node
        node_modules/
        ntuser.dat.LOG1
        ntuser.dat.LOG2
        ntuser.ini
        package-lock.json
        simplegit-progit/
        tmrowapp-contrib/

nothing added to commit but untracked files present

Administrator@TXXC520ZA99FVXM MINGW32 ~ (master|BISECTING)
$ "ADI"
bash: ADI: command not found

Administrator@TXXC520ZA99FVXM MINGW32 ~ (master|BISECTING)
$

-----------------------------------
-git status: dibawah ini dari sebuah buku yang mengtracked bukunya sendiri yang kosong ke saya. Yang diatas mengtracked buku atau save atau proyek saya sendiri.
untuk buku dibawah:
https://git-scm.com/book/id/v1/Memulai-Git

Administrator@TXXC520ZA99FVXM MINGW32 ~ (master|BISECTING)
$ git status
On branch master
You are currently bisecting, started from branch 'master'.
  (use "git bisect reset" to get back to the original branch)


Initial commit

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        .babelrc
        .bash_history
        .config/
        .gitconfig
        .node_repl_history
        .ssh/
        .viminfo
        3D Objects/
        AppData/
        Contacts/
        Desktop/
        Documents/
        Downloads/
        Favorites/
        KLN INFEED-dream-co-id
        Links/
        MicrosoftEdgeBackups/
        Music/
        NTUSER.DAT
        NTUSER.DAT{0ed1b5f8-3d86-11e8-a9df-7cfe90913f20}.TM.blf
        NTUSER.DAT{0ed1b5f8-3d86-11e8-a9df-7cfe90913f20}.TMContainer00000000000000000001.regtrans-ms
        NTUSER.DAT{0ed1b5f8-3d86-11e8-a9df-7cfe90913f20}.TMContainer00000000000000000002.regtrans-ms
        OneDrive/
        Pictures/
        Saved Games/
        Searches/
        Tracing/
        UsersAdministratorDocumentscircleciconfig.yml
        Videos/
        YandexDisk/
        demos/
        jsfiddle-api@0.0.1
        jsfiddler
        mesa/
        node
        node_modules/
        ntuser.dat.LOG1
        ntuser.dat.LOG2
        ntuser.ini
        package-lock.json
        tmrowapp-contrib/


It took 3.15 seconds to enumerate untracked files. 'status -uno'
may speed it up, but you have to be careful not to forget to add
new files yourself (see 'git help status').
nothing added to commit but untracked files present (use "git add" to track)

Administrator@TXXC520ZA99FVXM MINGW32 ~ (master|BISECTING)
$

-A99FVXM MINGW32 ~ (master|BISECTING)
$ vim README

-Returned:
-README [unix] {06:59 01/01/1970} 0.0-1 A
--VISUAL--

-vim benchmarks.rb

-Returned:

-/benchmarks.rb [unix] {06:59 01/01/1970} A
benchmarks.rb [New File]

-git commit

Administrator@TXXC520ZA99FVXM MINGW32 ~ (master|BISECTING)
$ 
On branch master
You are currently bisecting, started from branch 'master'.


Initial commit

Untracked files:
        .babelrc
        .bash_history
        .config/
        .gitconfig
        .node_repl_history
        .ssh/
        .viminfo
        3D Objects/
        AppData/
        Contacts/
        Desktop/
        Documents/
        Downloads/
        Favorites/
        KLN INFEED-dream-co-id
        Links/
        MicrosoftEdgeBackups/
        Music/
        NTUSER.DAT
        NTUSER.DAT{0ed1b5f7-3d86-11e8-a9df-7cfe90913f20}.TxR.0.regtrans-ms
        NTUSER.DAT{0ed1b5f7-3d86-11e8-a9df-7cfe90913f20}.TxR.1.regtrans-ms
        NTUSER.DAT{0ed1b5f7-3d86-11e8-a9df-7cfe90913f20}.TxR.2.regtrans-ms
        NTUSER.DAT{0ed1b5f7-3d86-11e8-a9df-7cfe90913f20}.TxR.blf
        NTUSER.DAT{0ed1b5f8-3d86-11e8-a9df-7cfe90913f20}.TM.blf
        NTUSER.DAT{0ed1b5f8-3d86-11e8-a9df-7cfe90913f20}.TMContainer00000000000000000001.regtrans-ms
        NTUSER.DAT{0ed1b5f8-3d86-11e8-a9df-7cfe90913f20}.TMContainer00000000000000000002.regtrans-ms
        OneDrive/
        Pictures/
        Saved Games/
        Searches/
        Tracing/
        UsersAdministratorDocumentscircleciconfig.yml
        Videos/
        YandexDisk/
        demos/
        jsfiddle-api@0.0.1
        jsfiddler
        mesa/
        node
        node_modules/
        ntuser.dat.LOG1
        ntuser.dat.LOG2
        ntuser.ini
        package-lock.json
        tmrowapp-contrib/

nothing added to commit but untracked files present

Administrator@TXXC520ZA99FVXM MINGW32 ~ (master|BISECTING)
$

-git commit -m ""

Administrator@TXXC520ZA99FVXM MINGW32 ~ (master|BISECTING)
$ git commit -m "https://github.com/github-adi/repository/blob/master/git-bash-help"
On branch master
You are currently bisecting, started from branch 'master'.


Initial commit

Untracked files:
        .babelrc
        .bash_history
        .config/
        .gitconfig
        .node_repl_history
        .ssh/
        .viminfo
        3D Objects/
        AppData/
        Contacts/
        Desktop/
        Documents/
        Downloads/
        Favorites/
        KLN INFEED-dream-co-id
        Links/
        MicrosoftEdgeBackups/
        Music/
        NTUSER.DAT
        NTUSER.DAT{0ed1b5f7-3d86-11e8-a9df-7cfe90913f20}.TxR.0.regtrans-ms
        NTUSER.DAT{0ed1b5f7-3d86-11e8-a9df-7cfe90913f20}.TxR.1.regtrans-ms
        NTUSER.DAT{0ed1b5f7-3d86-11e8-a9df-7cfe90913f20}.TxR.2.regtrans-ms
        NTUSER.DAT{0ed1b5f7-3d86-11e8-a9df-7cfe90913f20}.TxR.blf
        NTUSER.DAT{0ed1b5f8-3d86-11e8-a9df-7cfe90913f20}.TM.blf
        NTUSER.DAT{0ed1b5f8-3d86-11e8-a9df-7cfe90913f20}.TMContainer00000000000000000001.regtrans-ms
        NTUSER.DAT{0ed1b5f8-3d86-11e8-a9df-7cfe90913f20}.TMContainer00000000000000000002.regtrans-ms
        OneDrive/
        Pictures/
        Saved Games/
        Searches/
        Tracing/
        UsersAdministratorDocumentscircleciconfig.yml
        Videos/
        YandexDisk/
        demos/
        jsfiddle-api@0.0.1
        jsfiddler
        mesa/
        node
        node_modules/
        ntuser.dat.LOG1
        ntuser.dat.LOG2
        ntuser.ini
        package-lock.json
        tmrowapp-contrib/

nothing added to commit but untracked files present

Administrator@TXXC520ZA99FVXM MINGW32 ~ (master|BISECTING)
$

-git add


Administrator@TXXC520ZA99FVXM MINGW32 ~ (master|BISECTING)
$ git add <Music>
bash: syntax error near unexpected token `newline'

Administrator@TXXC520ZA99FVXM MINGW32 ~ (master|BISECTING)
$ git add -Music
error: unknown switch `M'
usage: git add [<options>] [--] <pathspec>...

    -n, --dry-run         dry run
    -v, --verbose         be verbose

    -i, --interactive     interactive picking
    -p, --patch           select hunks interactively
    -e, --edit            edit current diff and apply
    -f, --force           allow adding otherwise ignored files
    -u, --update          update tracked files
    -N, --intent-to-add   record only the fact that the path will be added later
    -A, --all             add changes from all tracked and untracked files
    --ignore-removal      ignore paths removed in the working tree (same as --no-all)
    --refresh             don't add, only refresh the index
    --ignore-errors       just skip files which cannot be added because of errors
    --ignore-missing      check if - even missing - files are ignored in dry run
    --chmod <(+/-)x>      override the executable bit of the listed files


Administrator@TXXC520ZA99FVXM MINGW32 ~ (master|BISECTING)
$

-git add --interactive

Administrator@TXXC520ZA99FVXM MINGW32 ~ (master|BISECTING)
$ git add --interactive

*** Commands ***
  1: status       2: update       3: revert       4: add untracked
  5: patch        6: diff         7: quit         8: help
What now> p
No changes.
*** Commands ***
  1: status       2: update       3: revert       4: add untracked
  5: patch        6: diff         7: quit         8: help
What now> s

*** Commands ***
  1: status       2: update       3: revert       4: add untracked
  5: patch        6: diff         7: quit         8: help
What now> update
*** Commands ***
  1: status       2: update       3: revert       4: add untracked
  5: patch        6: diff         7: quit         8: help
What now> r

*** Commands ***
  1: status       2: update       3: revert       4: add untracked
  5: patch        6: diff         7: quit         8: help
What now> a

What now> diff
*** Commands ***
  1: status       2: update       3: revert       4: add untracked
  5: patch        6: diff         7: quit         8: help
What now> help
status        - show paths with changes
update        - add working tree state to the staged set of changes
revert        - revert staged set of changes back to the HEAD version
patch         - pick hunks and update selectively
diff          - view diff between HEAD and index
add untracked - add contents of untracked files to the staged set of changes
*** Commands ***
  1: status       2: update       3: revert       4: add untracked
  5: patch        6: diff         7: quit         8: help
What now> quit
Bye.

Administrator@TXXC520ZA99FVXM MINGW32 ~ (master|BISECTING)
$

-git add --patch

Administrator@TXXC520ZA99FVXM MINGW32 ~ (master|BISECTING)
$ git add --patch
No changes.

Administrator@TXXC520ZA99FVXM MINGW32 ~ (master|BISECTING)
$

-it's your First Commot
-git commit --interactive "git commit interactive"

Administrator@TXXC520ZA99FVXM MINGW32 ~ (master|BISECTING)
$ git commit --interactive "git commit interactive"

*** Commands ***
  1: status       2: update       3: revert       4: add untracked
  5: patch        6: diff         7: quit         8: help
What now> q
Bye.
On branch master
You are currently bisecting, started from branch 'master'.


Initial commit

Untracked files:
        .babelrc
        .bash_history
        .config/
        .gitconfig
        .node_repl_history
        .ssh/
        .viminfo
        3D Objects/
        AppData/
        Contacts/
        Desktop/
        Documents/
        Downloads/
        Favorites/
        KLN INFEED-dream-co-id
        Links/
        MicrosoftEdgeBackups/
        Music/
        NTUSER.DAT
        NTUSER.DAT{0ed1b5f8-3d86-11e8-a9df-7cfe90913f20}.TM.blf
        NTUSER.DAT{0ed1b5f8-3d86-11e8-a9df-7cfe90913f20}.TMContainer00000000000000000001.regtrans-ms
        NTUSER.DAT{0ed1b5f8-3d86-11e8-a9df-7cfe90913f20}.TMContainer00000000000000000002.regtrans-ms
        OneDrive/
        Pictures/
        Saved Games/
        Searches/
        Tracing/
        UsersAdministratorDocumentscircleciconfig.yml
        Videos/
        YandexDisk/
        demos/
        jsfiddle-api@0.0.1
        jsfiddler
        mesa/
        node
        node_modules/
        ntuser.dat.LOG1
        ntuser.dat.LOG2
        ntuser.ini
        package-lock.json
        tmrowapp-contrib/

nothing added to commit but untracked files present

Administrator@TXXC520ZA99FVXM MINGW32 ~ (master|BISECTING)
$

